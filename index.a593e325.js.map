{"mappings":"ACEA,IAAM,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAQ,SAAS,aAAa,CAAC,UAKjC,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAW,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CA0CzC,SAAS,IACP,EAAa,QAAQ,CAAG,GA/CV,GAgDd,EAAa,QAAQ,CAAG,GAjDV,EAkDd,EAAa,QAAQ,CAAG,GA/CV,GAgDd,EAAa,QAAQ,CAAG,GAjDV,CAkDhB,CAEA,EAAa,gBAAgB,CAAC,QA/C9B,WACE,GAAI,EAPU,GAOU,CAGtB,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAO,UAAU,EAEnB,CAAA,IACA,GACF,CACF,GAsCA,EAAa,gBAAgB,CAAC,QApC9B,WACM,EApBU,IAqBZ,EAAM,SAAS,CAAC,IAChB,IACA,IAEJ,GA+BA,EAAa,gBAAgB,CAAC,QA7B9B,WACE,GAAI,EAzBU,GAyBU,CACjB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,IACA,GACF,CACF,GAsBA,EAAa,gBAAgB,CAAC,QApB9B,WACE,GAAI,EApCU,EAoCU,CACjB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,IACA,GACF,CACF,GAcA,OAAO,MAAM,CAAG,WACd,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar appendColBtn = document.querySelector(\".append-column\");\nvar removeColBtn = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\".field\");\nvar minRows = 2;\nvar maxRows = 10;\nvar minCols = 2;\nvar maxCols = 10;\nvar rowCount = table.rows.length;\nvar colCount = table.rows[0].cells.length;\nfunction appendRow() {\n    if (rowCount < maxRows) {\n        var newRow = table.insertRow();\n        for(var i = 0; i < colCount; i++)newRow.insertCell();\n        rowCount++;\n        updateButtons();\n    }\n}\nfunction removeRow() {\n    if (rowCount > minRows) {\n        table.deleteRow(-1);\n        rowCount--;\n        updateButtons();\n    }\n}\nfunction appendColumn() {\n    if (colCount < maxCols) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.insertCell();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        colCount++;\n        updateButtons();\n    }\n}\nfunction removeColumn() {\n    if (colCount > minCols) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.deleteCell(-1);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        colCount--;\n        updateButtons();\n    }\n}\nfunction updateButtons() {\n    appendRowBtn.disabled = rowCount >= maxRows;\n    removeRowBtn.disabled = rowCount <= minRows;\n    appendColBtn.disabled = colCount >= maxCols;\n    removeColBtn.disabled = colCount <= minCols;\n}\nappendRowBtn.addEventListener(\"click\", appendRow);\nremoveRowBtn.addEventListener(\"click\", removeRow);\nappendColBtn.addEventListener(\"click\", appendColumn);\nremoveColBtn.addEventListener(\"click\", removeColumn);\nwindow.onload = function() {\n    updateButtons();\n};\n\n//# sourceMappingURL=index.a593e325.js.map\n","'use strict';\n\nconst appendRowBtn = document.querySelector('.append-row');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst appendColBtn = document.querySelector('.append-column');\nconst removeColBtn = document.querySelector('.remove-column');\nconst table = document.querySelector('.field');\nconst minRows = 2;\nconst maxRows = 10;\nconst minCols = 2;\nconst maxCols = 10;\nlet rowCount = table.rows.length;\nlet colCount = table.rows[0].cells.length;\n\nfunction appendRow() {\n  if (rowCount < maxRows) {\n    const newRow = table.insertRow();\n\n    for (let i = 0; i < colCount; i++) {\n      newRow.insertCell();\n    }\n    rowCount++;\n    updateButtons();\n  }\n}\n\nfunction removeRow() {\n  if (rowCount > minRows) {\n    table.deleteRow(-1);\n    rowCount--;\n    updateButtons();\n  }\n}\n\nfunction appendColumn() {\n  if (colCount < maxCols) {\n    for (const row of table.rows) {\n      row.insertCell();\n    }\n    colCount++;\n    updateButtons();\n  }\n}\n\nfunction removeColumn() {\n  if (colCount > minCols) {\n    for (const row of table.rows) {\n      row.deleteCell(-1);\n    }\n    colCount--;\n    updateButtons();\n  }\n}\n\nfunction updateButtons() {\n  appendRowBtn.disabled = rowCount >= maxRows;\n  removeRowBtn.disabled = rowCount <= minRows;\n  appendColBtn.disabled = colCount >= maxCols;\n  removeColBtn.disabled = colCount <= minCols;\n}\n\nappendRowBtn.addEventListener('click', appendRow);\nremoveRowBtn.addEventListener('click', removeRow);\nappendColBtn.addEventListener('click', appendColumn);\nremoveColBtn.addEventListener('click', removeColumn);\n\nwindow.onload = function () {\n  updateButtons();\n};\n"],"names":["appendRowBtn","document","querySelector","removeRowBtn","appendColBtn","removeColBtn","table","rowCount","rows","length","colCount","cells","updateButtons","disabled","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell","window","onload"],"version":3,"file":"index.a593e325.js.map"}